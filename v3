getgenv().SecureMode = true
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
	Name = "ribakiscript",
	LoadingTitle = "ribaki",
	LoadingSubtitle = "by ribakiboys",
	ConfigurationSaving = {
	   Enabled = true,
	   FolderName = nil, -- Create a custom folder for your hub/game
	   FileName = "Big Hub"
	},
	Discord = {
	   Enabled = false,
	   Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
	   RememberJoins = true -- Set this to false to make them join the discord every time they load it up
	},
	KeySystem = false, -- Set this to true to use our key system
	KeySettings = {
	   Title = "Untitled",
	   Subtitle = "Key System",
	   Note = "No method of obtaining the key is provided",
	   FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
	   SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
	   GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
	   Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
	}
 })
 local Tab = Window:CreateTab("ribaki tab", 4483362458) -- Title, Image
 local Section = Tab:CreateSection("ribaki section")
 local Button = Tab:CreateButton({
	Name = "ribaki gold farm",
	Callback = function()
	    repeat
			local object = workspace.Deployables["Domestic Goldy Boi"] -- Replace "Domestic Goldy Boi" with the name of your object
		
		-- Define target positions as an array of Vector3 positions
		local targetPositions = {
		   Vector3.new(941.894165, -2.51427126, -1430.55945, 0.536319256, 4.09648436e-07, -0.844015181, -1.85644026e-07, 1, 3.67391465e-07, 0.844015181, -4.03527416e-08, 0.536319256),
			Vector3.new(960.429565, -3.00000238, -1394.23486, -0.844358981, -4.19528519e-08, -0.535777867, -9.18005405e-09, 1, -6.38353939e-08, 0.535777867, -4.89815193e-08, -0.844358981),
			Vector3.new(915.966797, -1.30976248, -1414.37, -0.778335571, 3.08096153e-11, 0.627848506, 5.80275585e-11, 1, 2.28642678e-11, -0.627848506, 5.42285938e-11, -0.778335571),
			Vector3.new(913.573181, -3.00000072, -1387.46594, -0.979724526, -6.11116349e-08, 0.200350657, -7.59341674e-08, 1, -6.62983624e-08, -0.200350657, -8.01675739e-08, -0.979724526),
			Vector3.new(135.677933, -7.00000143, -715.656311, -0.866570532, -7.18579656e-07, 0.499054611, -6.76133766e-07, 1, 2.65826685e-07, -0.499054611, -1.07070107e-07, -0.866570532),
			Vector3.new(-127.510689, -7.00155306, -204.139114, -0.911612511, 1.09557885e-09, 0.411050528, -3.8503285e-09, 1, -1.12044294e-08, -0.411050528, -1.17967787e-08, -0.911612511),
			Vector3.new(-110.192848, -26.0958595, -189.393417, -0.235210776, -3.38642039e-08, -0.971944392, -4.63946348e-09, 1, -3.37189583e-08, 0.971944392, -3.42176198e-09, -0.235210776),
			Vector3.new(-144.740509, -34.2616005, -168.784012, -0.569700241, 9.11639546e-08, 0.821852565, 3.41191715e-08, 1, -8.72738681e-08, -0.821852565, -2.16790159e-08, -0.569700241),
			Vector3.new(71.7346497, -44.0619736, -33.577507, 0.995675743, -4.1849038e-08, -0.0928965807, 3.42055593e-08, 1, -8.38716758e-08, 0.0928965807, 8.0331418e-08, 0.995675743),
			Vector3.new(77.7698364, -75.1247787, -143.70816, -0.573619246, -1.58774771e-08, 0.819122016, -2.36789699e-08, 1, 2.80149148e-09, -0.819122016, -1.77889774e-08, -0.573619246),
			Vector3.new(28.0484123, -75.0186005, -113.810852, -0.854183078, -5.51001245e-09, 0.519972801, -7.9165634e-09, 1, -2.40816478e-09, -0.519972801, -6.17340978e-09, -0.854183078),
			Vector3.new(4.43094444, -80.247963, -81.5641479, -0.866051316, 2.59172577e-08, 0.499955446, 2.90431732e-08, 1, -1.528905e-09, -0.499955446, 1.31961819e-08, -0.866051316),
			Vector3.new(0.0587510914, -83.2431488, -155.110779, 0.812395036, 6.7620336e-09, 0.583107471, -3.48505558e-09, 1, -6.74111122e-09, -0.583107471, 3.44428353e-09, 0.812395036),
			Vector3.new(-50.2697372, -87.0187531, -212.048981, 0.30343163, 1.69224423e-09, 0.952853203, 3.08083198e-10, 1, -1.87408356e-09, -0.952853203, 8.62214244e-10, 0.30343163),
			Vector3.new(-187.528381, -87.3593979, -262.028931, 0.35288167, 5.85137105e-10, 0.935667932, 7.25007138e-11, 1, -6.52711551e-10, -0.935667932, 2.98166547e-10, 0.35288167),
			Vector3.new(-245.846268, -82.738472, -246.156372, -0.27008152, 7.84199869e-08, 0.962837458, -7.47971285e-09, 1, -8.35448617e-08, -0.962837458, -2.9765669e-08, -0.27008152),
			Vector3.new(-221.098541, -95.819931, -123.512405, -0.433083415, 2.54029624e-06, -0.901353836, -4.70172336e-06, 1, 5.0774006e-06, 0.901353836, 6.43685416e-06, -0.433083415),
			Vector3.new(-22.3590565, -91.6316376, -4.19843245, -0.360423923, 4.63325129e-08, -0.932788849, 4.40488925e-08, 1, 3.26507461e-08, 0.932788849, -2.93202032e-08, -0.360423923),
			Vector3.new(-221.098541, -95.819931, -123.512405, -0.433083415, 2.54029624e-06, -0.901353836, -4.70172336e-06, 1, 5.0774006e-06, 0.901353836, 6.43685416e-06, -0.433083415),
			Vector3.new(-334.594086, -91.0132065, -46.3231125, -0.635841966, 6.38932462e-08, 0.771819293, 3.45391697e-08, 1, -5.43285132e-08, -0.771819293, -7.88635024e-09, -0.635841966),
			Vector3.new(-319.494293, -83.2557983, -117.037033, -0.688577414, 2.54931329e-08, -0.725162804, 1.98356087e-08, 1, 1.63201701e-08, 0.725162804, -3.14634474e-09, -0.688577414),
			Vector3.new(-287.513702, -71.2274857, -87.9992599, -0.245040178, 1.03501581e-08, -0.969512939, 3.77467657e-09, 1, 9.7215942e-09, 0.969512939, -1.27741684e-09, -0.245040178),
			Vector3.new(-237.493927, -71.6562729, -75.8199539, -0.32860446, 6.11578832e-09, -0.944467664, 2.72226819e-09, 1, 5.52823476e-09, 0.944467664, -7.5449158e-10, -0.32860446),
			Vector3.new(-287.513702, -71.2274857, -87.9992599, -0.245040178, 1.03501581e-08, -0.969512939, 3.77467657e-09, 1, 9.7215942e-09, 0.969512939, -1.27741684e-09, -0.245040178),
			Vector3.new(-299.487244, -95.1571579, -72.1852341, 0.700688958, 2.58089244e-06, -0.713466823, -2.34450431e-06, 1, 1.31488116e-06, 0.713466823, 7.51403718e-07, 0.700688958),
			Vector3.new(-216.970444, -96.6662216, -172.085632, 0.991693318, 6.28798534e-06, -0.128624767, -6.63935498e-06, 1, -2.30296973e-06, 0.128624767, 3.13782539e-06, 0.991693318),
			Vector3.new(-209.057571, -86.7778702, -245.219742, 0.886063457, 8.44722692e-09, 0.463563979, 8.23376656e-09, 1, -3.39605073e-08, -0.463563979, 3.39080408e-08, 0.886063457),
			Vector3.new(-251.312988, -79.0000229, -331.019348, 0.650900364, -2.54383874e-08, -0.759163141, 9.67237757e-09, 1, -2.52154404e-08, 0.759163141, 9.06982756e-09, 0.650900364),
			Vector3.new(-300.817413, -78.6221619, -370.283661, 0.593285918, -7.93857957e-09, 0.804991841, 6.98803548e-09, 1, 4.71144679e-09, -0.804991841, 2.8300764e-09, 0.593285918),
			Vector3.new(-251.312988, -79.0000229, -331.019348, 0.650900364, -2.54383874e-08, -0.759163141, 9.67237757e-09, 1, -2.52154404e-08, 0.759163141, 9.06982756e-09, 0.650900364),
			Vector3.new(-182.136322, -64.6527939, -418.158813, 0.17565465, -1.41195278e-09, -0.98445183, -2.47537157e-10, 1, -1.4784205e-09, 0.98445183, 5.03379727e-10, 0.17565465),
			Vector3.new(-157.582932, -103.000023, -419.698181, 0.123906195, -6.5654282e-10, -0.992293954, -1.50860519e-10, 1, -6.80479229e-10, 0.992293954, 2.34013642e-10, 0.123906195),
			Vector3.new(16.3566914, -100.655205, -413.032867, -0.938987017, -1.60236699e-10, -0.343952447, -1.70101613e-10, 1, -1.49287527e-12, 0.343952447, 5.71050776e-11, -0.938987017),
			Vector3.new(22.095274, -99.0000229, -374.732361, -0.994121552, -6.18240112e-11, 0.108270578, -5.90748631e-11, 1, 2.85989166e-11, -0.108270578, 2.20347265e-11, -0.994121552),
			Vector3.new(51.8468246, -99.0039749, -356.88678, 0.00788259506, -2.09780804e-11, -0.999969006, -7.31461853e-12, 1, -2.10363914e-11, 0.999969006, 7.48021436e-12, 0.00788259506),
			Vector3.new(20.4534111, -99.0000229, -385.375763, 0.645654738, -9.25749234e-12, 0.763629436, 8.49841031e-12, 1, 4.9375443e-12, -0.763629436, 3.30168792e-12, 0.645654738),
			Vector3.new(1.90031064, -102.990234, -439.480377, 0.944841087, -4.75987999e-12, 0.327529132, 5.05333969e-12, 1, -4.49508018e-14, -0.327529132, 1.69758727e-12, 0.944841087),
			Vector3.new(-106.920044, -103.000023, -342.36261, -0.63093853, -2.33733282e-08, 0.775832951, 3.71961839e-09, 1, 3.31517001e-08, -0.775832951, 2.38024853e-08, -0.63093853),
			Vector3.new(-119.505402, -87.3600159, -235.637482, -0.383446097, -9.97108529e-09, -0.92356354, -1.32026408e-08, 1, -5.31483568e-09, 0.92356354, 1.01555235e-08, -0.383446097),
			Vector3.new(-34.6137085, -83.0278397, -202.675018, -0.74174732, -5.83890314e-09, -0.67067939, -8.31897395e-09, 1, 4.94533969e-10, 0.67067939, 5.94618399e-09, -0.74174732),
			Vector3.new(-2.31084585, -83.2359238, -163.853348, -0.399502516, -1.62457947e-09, -0.916732192, -2.16542317e-09, 1, -8.2847279e-10, 0.916732192, 1.65413594e-09, -0.399502516),
			Vector3.new(87.4462662, -70.9772568, -123.610336, -0.969687343, -9.17149734e-09, 0.244349316, 1.83433757e-09, 1, 4.48138451e-08, -0.244349316, 4.39036327e-08, -0.969687343),
			Vector3.new(60.6982269, -42.5728645, -38.0057144, 0.635766149, -1.77996462e-09, 0.771881819, 7.70937714e-09, 1, -4.04388079e-09, -0.771881819, 8.52168913e-09, 0.635766149),
			Vector3.new(-28.8347168, -35.0000114, -140.188629, 0.989915967, -6.65577149e-10, -0.141655773, 2.07456247e-10, 1, -3.24881166e-09, 0.141655773, 3.18666316e-09, 0.989915967),
			Vector3.new(-4.91952467, -3.00156665, -259.663788, 0.980005026, -2.6749794e-10, -0.198972717, 7.28900273e-12, 1, -1.30849431e-09, 0.198972717, 1.28088062e-09, 0.980005026),
			Vector3.new(239.036102, -3.00000238, -407.405304, 0.460136294, -2.41848708e-10, -0.887848377, 1.41135859e-09, 1, 4.59052185e-10, 0.887848377, -1.4642989e-09, 0.460136294),
			Vector3.new(545.210327, 10.1615744, -388.657501, -0.0105448961, -2.73510121e-08, -0.999944448, -1.2757825e-08, 1, -2.7217995e-08, 0.999944448, 1.24701049e-08, -0.0105448961),
			Vector3.new(612.660828, -3.29633331, -387.544189, -0.0163623076, -1.95203871e-08, -0.999866128, -9.21881149e-09, 1, -1.93721394e-08, 0.999866128, 8.9006047e-09, -0.0163623076),
			Vector3.new(634.938416, -7.07204437, -380.931915, -0.223150134, 0.000114486786, -0.974784076, -4.31278859e-05, 1, 0.000127321298, 0.974784076, 7.04521444e-05, -0.223150134),
			Vector3.new(616.452148, -7.26066875, -354.546967, -0.985102236, -3.68659165e-08, -0.171969712, -2.82545418e-08, 1, -5.25226369e-08, 0.171969712, -4.68812438e-08, -0.985102236),
			Vector3.new(560.834961, 10.0152988, -393.184814, -0.995509267, -1.1579212e-09, 0.0946670473, -1.29212696e-09, 1, -1.35636202e-09, -0.0946670473, -1.47259238e-09, -0.995509267),
			Vector3.new(466.535065, 15.6105757, 144.608231, -0.983804107, -5.74335282e-08, 0.179246888, -6.15656788e-08, 1, -1.74900681e-08, -0.179246888, -2.82422583e-08, -0.983804107),
			Vector3.new(466.609009, 12.3995285, 231.718094, -0.987709224, -1.16314327e-08, 0.156302527, -1.23824577e-08, 1, -3.83125798e-09, -0.156302527, -5.71957814e-09, -0.987709224),
			Vector3.new(1069.62769, -2.01923633, 389.046936, 0.122001648, 7.87971288e-08, -0.992529988, -2.53430379e-08, 1, 7.62750147e-08, 0.992529988, 1.58480375e-08, 0.122001648),
			Vector3.new(1260.58093, -4.92486668, 365.572052, 0.12200164, -9.72053371e-08, -0.992529929, 3.12655466e-08, 1, -9.40937781e-08, 0.992529929, -1.95523935e-08, 0.12200164),
			Vector3.new(1285.8833, -24.6260605, 456.22702, -0.16231513, 3.11293569e-08, 0.986739159, 2.20036682e-08, 1, -2.79281878e-08, -0.986739159, 1.71787171e-08, -0.16231513),
			Vector3.new(1164.7019, -15.2347498, 484.233185, -0.24204953, -9.84581376e-08, 0.970263898, -7.50955564e-08, 1, 8.27417068e-08, -0.970263898, -5.28349133e-08, -0.24204953),
			Vector3.new(1189.82654, -15.0124168, 477.326294, 0.97055757, 1.16846488e-08, 0.240869373, -2.82378245e-08, 1, 6.52709957e-08, -0.240869373, -7.01508895e-08, 0.97055757),
			Vector3.new(1185.48962, -15.3655577, 460.623688, 0.966205895, 8.11140666e-09, 0.257771581, -2.03912975e-08, 1, 4.49653292e-08, -0.257771581, -4.87020628e-08, 0.966205895),
			Vector3.new(1239.61536, -15.836647, 569.741211, -0.81306088, 2.2563893e-09, -0.58217901, 9.72026903e-09, 1, -9.69938885e-09, 0.58217901, -1.35451268e-08, -0.81306088),
			Vector3.new(1317.71094, -15.5331202, 667.523499, -0.845540047, 7.68285435e-09, -0.533911943, -1.07146407e-08, 1, 3.13581872e-08, 0.533911943, 3.22352811e-08, -0.845540047),
			Vector3.new(1360.5708, -19.0000648, 676.775513, -0.220362663, 2.4340407e-08, -0.975418031, -3.60282542e-08, 1, 3.30931869e-08, 0.975418031, 4.24351114e-08, -0.220362663),
			Vector3.new(1317.71094, -15.5331202, 667.523499, -0.845540047, 7.68285435e-09, -0.533911943, -1.07146407e-08, 1, 3.13581872e-08, 0.533911943, 3.22352811e-08, -0.845540047),
			Vector3.new(1281.05469, -19.0259552, 688.496887, -0.693839133, 3.81410388e-08, 0.720130026, 1.12077529e-08, 1, -4.21655244e-08, -0.720130026, -2.11850537e-08, -0.693839133),
			Vector3.new(1317.71094, -15.5331202, 667.523499, -0.845540047, 7.68285435e-09, -0.533911943, -1.07146407e-08, 1, 3.13581872e-08, 0.533911943, 3.22352811e-08, -0.845540047),
			Vector3.new(1228.13147, -11.1858006, 549.661804, -0.743919373, 3.20675611e-08, -0.668269396, -2.98764817e-08, 1, 8.12445649e-08, 0.668269396, 8.04049449e-08, -0.743919373),
			Vector3.new(1193.46191, -15.42416, 476.999725, 0.252061516, 5.18076826e-09, -0.96771121, -1.38744172e-08, 1, 1.7397358e-09, 0.96771121, 1.29879085e-08, 0.252061516),
			Vector3.new(1384.72021, -3.04338145, 429.868195, 0.997752428, -1.1158428e-08, 0.0670084655, 9.91760007e-09, 1, 1.88501392e-08, -0.0670084655, -1.81432096e-08, 0.997752428),
			Vector3.new(936.94928, -1.01723075, -1404.69226, 0.983798683, -4.08403835e-08, 0.179276749, 5.30534692e-08, 1, -6.33297219e-08, -0.179276749, 7.18149522e-08, 0.983798683),
		}
		
		local tolerance = 2 -- Adjust this value to change how close the object needs to get to the target position
		local speed = 80 -- Adjust this value to change the movement speed
		local waitTime = 1.5 -- Adjust this value to change the wait time between positions (in seconds)
		
		-- Loop through each target position
		for _, targetPosition in ipairs(targetPositions) do
			while true do
				local position = object:IsA("Model") and object.PrimaryPart and object.PrimaryPart.Position or object.Position
				if position then
					local direction = (targetPosition - position).unit
					local distance = (targetPosition - position).magnitude
					
					if distance > tolerance then
						-- Move the object towards the target position gradually
						object:SetPrimaryPartCFrame(object:GetPrimaryPartCFrame() + direction * speed * game:GetService("RunService").Heartbeat:Wait())
					else
						break -- Exit the loop when the object reaches the target position
					end
				else
					warn("Object does not have a valid position.")
					break
				end
				
				wait() -- Yield to allow other processes to run
			end
			
			wait(waitTime) -- Wait for a certain amount of time before moving to the next position
		end
		
		
		until false
	end,
 })
